{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, userSelector } from \"../../slices/user\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Grid, Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }));\n}\n\nconst Login = props => {\n  const [open, setOpen] = React.useState(true);\n  const dispatch = useDispatch();\n  const {\n    user,\n    error,\n    loading,\n    hasErrors\n  } = useSelector(userSelector);\n  const error_message = error.error;\n\n  const renderPosts = () => {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \"Loading posts...\");\n    if (hasErrors) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Collapse, {\n      in: open,\n      style: {\n        margin: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      severity: \"error\",\n      action: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        size: \"small\",\n        onClick: () => {\n          setOpen(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        fontSize: \"inherit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, error_message))); // if (user) return <Redirect to={\"/feeds\"} />;\n    //   if (user)\n    //     return (\n    //       <Redirect\n    //         to={{\n    //           pathname: \"/feeds\",\n    //           state: { id: user.user.token },\n    //         }}\n    //       />\n    //     );\n  };\n\n  function handleSubmit(e) {\n    console.log(\"submitted\"); //do your task here before redirect\n    //...\n\n    props.push(\"/feeds\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"pc-100\",\n    style: {\n      textAlign: \"center\"\n    },\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 8,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, renderPosts(), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    id: \"outlined-full-width\",\n    component: TextField,\n    type: \"text\",\n    name: \"username\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: TextField,\n    type: \"password\",\n    name: \"password\",\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: isSubmitting,\n    variant: \"contained\",\n    color: \"primary\",\n    align: \"center\",\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Submit\")))))))) //\n  ;\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js"],"names":["React","useDispatch","useSelector","login","userSelector","TextField","Grid","Card","CardContent","Typography","Button","Field","Form","Formik","MuiAlert","IconButton","Collapse","CloseIcon","Redirect","Alert","props","Login","open","setOpen","useState","dispatch","user","error","loading","hasErrors","error_message","renderPosts","margin","handleSubmit","e","console","log","push","textAlign","username","password","values","setSubmitting","resetForm","isSubmitting","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,mBAApC;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,MAA9C,QAA4D,mBAA5D;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,QAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,aAAP;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAMC,KAAK,GAAID,KAAD,IAAW;AACvB,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACwB,QAAN,CAAe,IAAf,CAAxB;AAEA,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAM;AAAEyB,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAsC3B,WAAW,CAACE,YAAD,CAAvD;AACA,QAAM0B,aAAa,GAAGH,KAAK,CAACA,KAA5B;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIH,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACb,QAAIC,SAAJ,EACE,oBACE,uDACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEP,IAAd;AAAoB,MAAA,KAAK,EAAE;AAAEU,QAAAA,MAAM,EAAE;AAAV,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAC,OADX;AAEE,MAAA,MAAM,eACJ,oBAAC,UAAD;AACE,sBAAW,OADb;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,OAAO,EAAE,MAAM;AACbT,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeGO,aAfH,CADF,CADF,CADF,CAHsB,CA0BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GApCD;;AAsCA,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADuB,CAEvB;AACA;;AACAhB,IAAAA,KAAK,CAACiB,IAAN,CAAW,QAAX;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,UAAU,EAAC,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,EADd,eAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAKE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAT,KAA0C;AAClDV,MAAAA,YAAY;AACb,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,CAAC;AAAEW,IAAAA;AAAF,GAAD,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,qBADL;AAEE,IAAA,SAAS,EAAEvC,SAFb;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEA,SADb;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC,UAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAcE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEuC,YAFZ;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,KAAK,EAAC,QALR;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,CAPJ,CALF,CADF,CADF,CAPF,CADF,CADF,CAwDE;AAxDF;AA0DD,CA9GD;;AAgHA,eAAexB,KAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, userSelector } from \"../../slices/user\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { Grid, Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./style.css\";\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Login = (props) => {\n  const [open, setOpen] = React.useState(true);\n\n  const dispatch = useDispatch();\n  const { user, error, loading, hasErrors } = useSelector(userSelector);\n  const error_message = error.error;\n\n  const renderPosts = () => {\n    if (loading) return <p>Loading posts...</p>;\n    if (hasErrors)\n      return (\n        <>\n          <Collapse in={open} style={{ margin: 20 }}>\n            <Alert\n              severity=\"error\"\n              action={\n                <IconButton\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n              {error_message}\n            </Alert>\n          </Collapse>\n        </>\n      );\n    // if (user) return <Redirect to={\"/feeds\"} />;\n    //   if (user)\n    //     return (\n    //       <Redirect\n    //         to={{\n    //           pathname: \"/feeds\",\n    //           state: { id: user.user.token },\n    //         }}\n    //       />\n    //     );\n  };\n\n  function handleSubmit(e) {\n    console.log(\"submitted\");\n    //do your task here before redirect\n    //...\n    props.push(\"/feeds\");\n  }\n\n  return (\n    <div className=\"login-bg\">\n      <Grid\n        className=\"pc-100\"\n        style={{ textAlign: \"center\" }}\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={11} sm={8} md={6}>\n          <Card>\n            <CardContent>\n              {renderPosts()}\n              <Typography variant=\"h4\" align=\"center\">\n                Login\n              </Typography>\n              <Formik\n                initialValues={{ username: \"\", password: \"\" }}\n                onSubmit={(values, { setSubmitting, resetForm }) => {\n                  handleSubmit();\n                }}\n              >\n                {({ isSubmitting }) => (\n                  <Form>\n                    <Field\n                      id=\"outlined-full-width\"\n                      component={TextField}\n                      type=\"text\"\n                      name=\"username\"\n                      label=\"Email\"\n                    />\n                    <Field\n                      component={TextField}\n                      type=\"password\"\n                      name=\"password\"\n                      label=\"Password\"\n                    />\n                    <Button\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      align=\"center\"\n                      style={{ marginTop: 20 }}\n                    >\n                      Submit\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n\n    //\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}