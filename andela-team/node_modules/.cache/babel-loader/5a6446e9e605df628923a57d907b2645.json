{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser,\n  loading: false,\n  hasErrors: false,\n  article: {}\n}; // A slice of user with our reducers\n\nconst articleSlice = createSlice({\n  name: \"article\",\n  initialState,\n  reducers: {\n    getArticle: state => {\n      state.loading = true;\n    },\n    getArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    getArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    editArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    editArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    deleteArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    deleteArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  getArticle,\n  getArticleSuccess,\n  getArticleFailure,\n  editArticleSuccess,\n  editArticleFailure,\n  deleteArticleSuccess,\n  deleteArticleFailure\n} = articleSlice.actions; // A selector\n\nexport const articleSelector = state => state.article; // The reducer\n\nexport default articleSlice.reducer;\nexport function fetchArticle(id, token) {\n  var bearer_token;\n\n  if (token.length > 0) {\n    bearer_token = token;\n  } else {\n    bearer_token = initialState.user.user.token;\n  }\n\n  return async dispatch => {\n    dispatch(getArticle());\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/articles/${id}`, {\n        headers: {\n          authorization: \"Bearer \" + bearer_token\n        }\n      });\n      const data = await response.json();\n      dispatch(getArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticleFailure());\n    }\n  };\n}\nexport function deleteArticle(id) {\n  const bearer_token = initialState.user.user.token;\n  return async dispatch => {\n    dispatch(getArticle());\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/articles/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: \"Bearer \" + bearer_token\n        }\n      });\n      const data = await response.json();\n      dispatch(deleteArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(deleteArticleFailure());\n    }\n  };\n}\nexport function editArticle(id, {\n  form_title,\n  form_desc,\n  form_cat,\n  form_share\n}) {\n  const bearer_token = initialState.user.user.token;\n  const content = {\n    title: form_title,\n    description: form_desc\n  };\n  return async dispatch => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/articles/${id}`, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + bearer_token\n        },\n        body: JSON.stringify(content)\n      });\n      const data = await response.json();\n      dispatch(editArticleSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(editArticleFailure());\n    }\n  };\n}","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/article.js"],"names":["createSlice","initialUser","localStorage","getItem","JSON","parse","initialState","user","loading","hasErrors","article","articleSlice","name","reducers","getArticle","state","getArticleSuccess","action","payload","getArticleFailure","error","editArticleSuccess","editArticleFailure","deleteArticleSuccess","deleteArticleFailure","actions","articleSelector","reducer","fetchArticle","id","token","bearer_token","length","dispatch","response","fetch","headers","authorization","data","json","console","log","deleteArticle","method","editArticle","form_title","form_desc","form_cat","form_share","content","title","description","Accept","body","stringify","message"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nexport const initialState = {\n  user: initialUser,\n  loading: false,\n  hasErrors: false,\n  article: {},\n};\n\n// A slice of user with our reducers\nconst articleSlice = createSlice({\n  name: \"article\",\n  initialState,\n  reducers: {\n    getArticle: (state) => {\n      state.loading = true;\n    },\n    getArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    getArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    editArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    editArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    deleteArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    deleteArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const {\n  getArticle,\n  getArticleSuccess,\n  getArticleFailure,\n  editArticleSuccess,\n  editArticleFailure,\n  deleteArticleSuccess,\n  deleteArticleFailure,\n} = articleSlice.actions;\n\n// A selector\nexport const articleSelector = (state) => state.article;\n\n// The reducer\nexport default articleSlice.reducer;\n\nexport function fetchArticle(id, token) {\n  var bearer_token;\n  if (token.length > 0) {\n    bearer_token = token;\n  } else {\n    bearer_token = initialState.user.user.token;\n  }\n  return async (dispatch) => {\n    dispatch(getArticle());\n    try {\n      const response = await fetch(\n        `http://localhost:5000/api/v1/articles/${id}`,\n        {\n          headers: {\n            authorization: \"Bearer \" + bearer_token,\n          },\n        }\n      );\n\n      const data = await response.json();\n      dispatch(getArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticleFailure());\n    }\n  };\n}\n\nexport function deleteArticle(id) {\n  const bearer_token = initialState.user.user.token;\n  return async (dispatch) => {\n    dispatch(getArticle());\n    try {\n      const response = await fetch(\n        `http://localhost:5000/api/v1/articles/${id}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            authorization: \"Bearer \" + bearer_token,\n          },\n        }\n      );\n\n      const data = await response.json();\n      dispatch(deleteArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(deleteArticleFailure());\n    }\n  };\n}\n\nexport function editArticle(\n  id,\n  { form_title, form_desc, form_cat, form_share }\n) {\n  const bearer_token = initialState.user.user.token;\n  const content = {\n    title: form_title,\n    description: form_desc,\n  };\n  return async (dispatch) => {\n    try {\n      const response = await fetch(\n        `http://localhost:5000/api/v1/articles/${id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json, text/plain, */*\",\n            \"Content-Type\": \"application/json\",\n            authorization: \"Bearer \" + bearer_token,\n          },\n          body: JSON.stringify(content),\n        }\n      );\n\n      const data = await response.json();\n      dispatch(editArticleSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(editArticleFailure());\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}