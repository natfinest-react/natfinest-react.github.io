{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser,\n  articles: []\n}; // A slice of user with our reducers\n\nconst articlesSlice = createSlice({\n  name: \"articles\",\n  initialState,\n  reducers: {\n    getArticlesSuccess: (state, action) => {\n      state.articles = action.payload;\n    },\n    getArticlesFailure: (state, action) => {\n      state.error = action.payload;\n    },\n    postArticleSuccess: (state, action) => {\n      state.articles = action.payload;\n    },\n    postArticleFailure: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  getArticlesSuccess,\n  getArticlesFailure,\n  postArticleFailure,\n  postArticleSuccess\n} = articlesSlice.actions; // A selector\n\nexport const articlesSelector = state => state.articles; // The reducer\n\nexport default articlesSlice.reducer; // Asynchronous thunk action\n// export const fetchFeeds = () => async (dispatch) => {\n//   const token = initialState.user.user.token;\n//   axios\n//     .get(\"http://localhost:5000/api/v1/feed\", {\n//       headers: {\n//         Authorization: \"Bearer \" + token,\n//       },\n//     })\n//     .then((response) => {\n//       // const feed = response.data;\n//       const feed = response.data.data;\n//       console.log(feed);\n//       dispatch(getFeedSuccess({ feed }));\n//     })\n//     .catch((error) => {\n//       const err = error.response.data.error;\n//       dispatch(getFeedsFailure({ err }));\n//     });\n// };\n\nexport function postArticle({\n  form_title,\n  form_desc,\n  form_cat,\n  form_share\n}) {\n  const content = {\n    title: form_title,\n    description: form_desc,\n    category: form_cat,\n    share: form_share\n  };\n  const bearer_token = initialState.user.user.token;\n  return async dispatch => {\n    try {\n      // const bearer_token = initialState.user.user.token;\n      const response = await fetch(\"http://localhost:5000/api/v1/articles\", {\n        method: \"POST\",\n        headers: {\n          authorization: \"Bearer \" + bearer_token\n        },\n        body: JSON.stringify(content)\n      });\n      const data = await response.json();\n      console.log(data);\n      dispatch(postArticleSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(postArticleFailure());\n    }\n  };\n}\nexport function fetchArticles(token) {\n  var bearer_token;\n\n  if (token.length > 0) {\n    bearer_token = token;\n  } else {\n    bearer_token = initialState.user.user.token;\n  }\n\n  return async dispatch => {\n    try {\n      // const bearer_token = initialState.user.user.token;\n      const response = await fetch(\"http://localhost:5000/api/v1/articles\", {\n        headers: {\n          authorization: \"Bearer \" + bearer_token\n        }\n      });\n      const data = await response.json();\n      dispatch(getArticlesSuccess(data.data.message));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticlesFailure());\n    }\n  };\n}","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/articles.js"],"names":["createSlice","initialUser","localStorage","getItem","JSON","parse","initialState","user","articles","articlesSlice","name","reducers","getArticlesSuccess","state","action","payload","getArticlesFailure","error","postArticleSuccess","postArticleFailure","actions","articlesSelector","reducer","postArticle","form_title","form_desc","form_cat","form_share","content","title","description","category","share","bearer_token","token","dispatch","response","fetch","method","headers","authorization","body","stringify","data","json","console","log","message","fetchArticles","length"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nexport const initialState = {\n  user: initialUser,\n  articles: [],\n};\n\n// A slice of user with our reducers\nconst articlesSlice = createSlice({\n  name: \"articles\",\n  initialState,\n  reducers: {\n    getArticlesSuccess: (state, action) => {\n      state.articles = action.payload;\n    },\n    getArticlesFailure: (state, action) => {\n      state.error = action.payload;\n    },\n    postArticleSuccess: (state, action) => {\n      state.articles = action.payload;\n    },\n    postArticleFailure: (state, action) => {\n      state.error = action.payload;\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const {\n  getArticlesSuccess,\n  getArticlesFailure,\n  postArticleFailure,\n  postArticleSuccess,\n} = articlesSlice.actions;\n\n// A selector\nexport const articlesSelector = (state) => state.articles;\n\n// The reducer\nexport default articlesSlice.reducer;\n\n// Asynchronous thunk action\n// export const fetchFeeds = () => async (dispatch) => {\n//   const token = initialState.user.user.token;\n//   axios\n//     .get(\"http://localhost:5000/api/v1/feed\", {\n//       headers: {\n//         Authorization: \"Bearer \" + token,\n//       },\n//     })\n//     .then((response) => {\n//       // const feed = response.data;\n//       const feed = response.data.data;\n//       console.log(feed);\n//       dispatch(getFeedSuccess({ feed }));\n//     })\n//     .catch((error) => {\n//       const err = error.response.data.error;\n//       dispatch(getFeedsFailure({ err }));\n//     });\n// };\nexport function postArticle({ form_title, form_desc, form_cat, form_share }) {\n  const content = {\n    title: form_title,\n    description: form_desc,\n    category: form_cat,\n    share: form_share,\n  };\n  const bearer_token = initialState.user.user.token;\n  return async (dispatch) => {\n    try {\n      // const bearer_token = initialState.user.user.token;\n\n      const response = await fetch(\"http://localhost:5000/api/v1/articles\", {\n        method: \"POST\",\n        headers: {\n          authorization: \"Bearer \" + bearer_token,\n        },\n        body: JSON.stringify(content),\n      });\n\n      const data = await response.json();\n      console.log(data);\n      dispatch(postArticleSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(postArticleFailure());\n    }\n  };\n}\n\nexport function fetchArticles(token) {\n  var bearer_token;\n  if (token.length > 0) {\n    bearer_token = token;\n  } else {\n    bearer_token = initialState.user.user.token;\n  }\n  return async (dispatch) => {\n    try {\n      // const bearer_token = initialState.user.user.token;\n      const response = await fetch(\"http://localhost:5000/api/v1/articles\", {\n        headers: {\n          authorization: \"Bearer \" + bearer_token,\n        },\n      });\n\n      const data = await response.json();\n      dispatch(getArticlesSuccess(data.data.message));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticlesFailure());\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}