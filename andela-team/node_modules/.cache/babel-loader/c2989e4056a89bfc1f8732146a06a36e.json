{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js\";\nimport React, { useEffect } from \"react\"; // import MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../../slices/user\"; // import { TextField } from \"formik-material-ui\";\n\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport { //   TextField,\nGrid, Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user);\n\n  if (user) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, \"Hi, \", user.username, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => dispatch(logout()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  } // const renderPosts = () => {\n  //   if (loading) return <p>Loading posts...</p>;\n  //   if (hasErrors) return <p>Unable to display posts.</p>;\n  //   return user.map((user) => <User key={user.id} post={user} excerpt />);\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      marginTop: 50\n    },\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      dispatch(login(values));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    id: \"outlined-full-width\",\n    component: TextField,\n    type: \"text\",\n    name: \"username\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: TextField,\n    type: \"password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"View Posts\")))))))) // <div>\n  //   <Grid className=\"mt-2\" container justify=\"center\" alignItems=\"center\">\n  //     <Grid item xs={6}>\n  //       <Card className=\"mt-2\">\n  //         <CardContent>\n  //           <Typography variant=\"h4\" align=\"center\">\n  //             Login\n  //           </Typography>\n  //           <TextField\n  //             id=\"outlined-full-width\"\n  //             label=\"Email\"\n  //             style={{ marginTop: 5, padding: 12 }}\n  //             placeholder=\"Email Address\"\n  //             fullWidth\n  //             margin=\"normal\"\n  //             InputLabelProps={{\n  //               shrink: true,\n  //             }}\n  //             variant=\"outlined\"\n  //             value={this.state.LoginData.email}\n  //             onChange={(e) => {\n  //               let { LoginData } = this.state;\n  //               LoginData.email = e.target.value;\n  //               this.setState({ LoginData });\n  //             }}\n  //           />\n  //           <TextField\n  //             id=\"outlined-full-width\"\n  //             label=\"Password\"\n  //             type=\"password\"\n  //             style={{ marginTop: 5, padding: 12 }}\n  //             placeholder=\"Password\"\n  //             fullWidth\n  //             margin=\"normal\"\n  //             InputLabelProps={{\n  //               shrink: true,\n  //             }}\n  //             variant=\"outlined\"\n  //             value={this.state.LoginData.password}\n  //             onChange={(e) => {\n  //               let { LoginData } = this.state;\n  //               LoginData.password = e.target.value;\n  //               this.setState({ LoginData });\n  //             }}\n  //           />\n  //           <Button\n  //             variant=\"contained\"\n  //             color=\"primary\"\n  //             align=\"center\"\n  //             onClick={this.login.bind(this)}\n  //           >\n  //             <Link to=\"/login\" className=\"button\">\n  //               View Posts\n  //             </Link>\n  //           </Button>\n  //           {/* {error && (\n  //               <Alert severity=\"error\" onClick={() => setError(null)}>\n  //                 {props.error || error}\n  //               </Alert>\n  //             )} */}\n  //         </CardContent>\n  //       </Card>\n  //     </Grid>\n  //   </Grid>\n  //   {/* {renderPosts()} */}\n  // </div>\n  ;\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js"],"names":["React","useEffect","useDispatch","useSelector","login","logout","TextField","Grid","Card","CardContent","Typography","Button","Field","Form","Formik","Login","dispatch","user","state","username","marginTop","password","values","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n// import MuiAlert from \"@material-ui/lab/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../../slices/user\";\n// import { TextField } from \"formik-material-ui\";\nimport { TextField } from \"material-ui-formik-components/TextField\";\nimport {\n  //   TextField,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.user);\n  if (user) {\n    return (\n      <div>\n        Hi, {user.username}\n        <button onClick={() => dispatch(logout())}>Logout</button>\n      </div>\n    );\n  }\n\n  // const renderPosts = () => {\n  //   if (loading) return <p>Loading posts...</p>;\n  //   if (hasErrors) return <p>Unable to display posts.</p>;\n\n  //   return user.map((user) => <User key={user.id} post={user} excerpt />);\n  // };\n\n  return (\n    <div>\n      <Grid\n        style={{ marginTop: 50 }}\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={6}>\n          <Card className=\"mt-2\">\n            <CardContent>\n              <Typography variant=\"h4\" align=\"center\">\n                Login\n              </Typography>\n              <Formik\n                initialValues={{ username: \"\", password: \"\" }}\n                onSubmit={(values) => {\n                  dispatch(login(values));\n                }}\n              >\n                {({ isSubmitting }) => (\n                  <Form>\n                    <Field\n                      id=\"outlined-full-width\"\n                      component={TextField}\n                      type=\"text\"\n                      name=\"username\"\n                      label=\"Email\"\n                    />\n                    <Field\n                      component={TextField}\n                      type=\"password\"\n                      name=\"password\"\n                    />\n                    {/* <button type=\"submit\" disabled={isSubmitting}>\n                  Login\n                </button> */}\n                    <Button variant=\"contained\" color=\"primary\" align=\"center\">\n                      View Posts\n                    </Button>\n                  </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n\n    // <div>\n    //   <Grid className=\"mt-2\" container justify=\"center\" alignItems=\"center\">\n    //     <Grid item xs={6}>\n    //       <Card className=\"mt-2\">\n    //         <CardContent>\n    //           <Typography variant=\"h4\" align=\"center\">\n    //             Login\n    //           </Typography>\n\n    //           <TextField\n    //             id=\"outlined-full-width\"\n    //             label=\"Email\"\n    //             style={{ marginTop: 5, padding: 12 }}\n    //             placeholder=\"Email Address\"\n    //             fullWidth\n    //             margin=\"normal\"\n    //             InputLabelProps={{\n    //               shrink: true,\n    //             }}\n    //             variant=\"outlined\"\n    //             value={this.state.LoginData.email}\n    //             onChange={(e) => {\n    //               let { LoginData } = this.state;\n    //               LoginData.email = e.target.value;\n    //               this.setState({ LoginData });\n    //             }}\n    //           />\n\n    //           <TextField\n    //             id=\"outlined-full-width\"\n    //             label=\"Password\"\n    //             type=\"password\"\n    //             style={{ marginTop: 5, padding: 12 }}\n    //             placeholder=\"Password\"\n    //             fullWidth\n    //             margin=\"normal\"\n    //             InputLabelProps={{\n    //               shrink: true,\n    //             }}\n    //             variant=\"outlined\"\n    //             value={this.state.LoginData.password}\n    //             onChange={(e) => {\n    //               let { LoginData } = this.state;\n    //               LoginData.password = e.target.value;\n    //               this.setState({ LoginData });\n    //             }}\n    //           />\n\n    //           <Button\n    //             variant=\"contained\"\n    //             color=\"primary\"\n    //             align=\"center\"\n    //             onClick={this.login.bind(this)}\n    //           >\n    //             <Link to=\"/login\" className=\"button\">\n    //               View Posts\n    //             </Link>\n    //           </Button>\n\n    //           {/* {error && (\n    //               <Alert severity=\"error\" onClick={() => setError(null)}>\n    //                 {props.error || error}\n    //               </Alert>\n    //             )} */}\n    //         </CardContent>\n    //       </Card>\n    //     </Grid>\n    //   </Grid>\n    //   {/* {renderPosts()} */}\n    // </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}