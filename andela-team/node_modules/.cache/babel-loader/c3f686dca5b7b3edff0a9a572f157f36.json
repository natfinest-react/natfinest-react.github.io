{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js\";\nimport React, { useEffect } from \"react\"; // import MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../../slices/user\"; // import { TextField } from \"formik-material-ui\";\n\nimport { TextField, Grid, Card, CardContent, Typography, Button } from \"@material-ui/core\"; // import { Field, Form, Formik } from \"formik\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user);\n\n  if (user) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, \"Hi, \", user.username, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => dispatch(logout()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  }\n\n  state = {\n    username: \"\",\n    password: \"\"\n  }; // const renderPosts = () => {\n  //   if (loading) return <p>Loading posts...</p>;\n  //   if (hasErrors) return <p>Unable to display posts.</p>;\n  //   return user.map((user) => <User key={user.id} post={user} excerpt />);\n  // };\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <Formik\n    //     initialValues={{ username: \"\", password: \"\" }}\n    //     onSubmit={(values) => {\n    //       dispatch(login(values));\n    //     }}\n    //   >\n    //     {({ isSubmitting }) => (\n    //       <Form>\n    //         <Field\n    //           id=\"outlined-full-width\"\n    //           component={TextField}\n    //           type=\"text\"\n    //           name=\"username\"\n    //         />\n    //         <Field component={TextField} type=\"password\" name=\"password\" />\n    //         <button type=\"submit\" disabled={isSubmitting}>\n    //           Login\n    //         </button>\n    //       </Form>\n    //     )}\n    //   </Formik>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"mt-2\",\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Email\",\n      style: {\n        marginTop: 5,\n        padding: 12\n      },\n      placeholder: \"Email Address\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\",\n      value: this.state.LoginData.email,\n      onChange: e => {\n        let {\n          LoginData\n        } = this.state;\n        LoginData.email = e.target.value;\n        this.setState({\n          LoginData\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Password\",\n      type: \"password\",\n      style: {\n        marginTop: 5,\n        padding: 12\n      },\n      placeholder: \"Password\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\",\n      value: this.state.LoginData.password,\n      onChange: e => {\n        let {\n          LoginData\n        } = this.state;\n        LoginData.password = e.target.value;\n        this.setState({\n          LoginData\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      align: \"center\",\n      onClick: this.login.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"submit\"))))))\n  );\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js"],"names":["React","useEffect","useDispatch","useSelector","login","logout","TextField","Grid","Card","CardContent","Typography","Button","Login","dispatch","user","state","username","password","marginTop","padding","shrink","LoginData","email","e","target","value","setState","bind"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n// import MuiAlert from \"@material-ui/lab/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../../slices/user\";\n// import { TextField } from \"formik-material-ui\";\nimport {\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\n// import { Field, Form, Formik } from \"formik\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.user);\n  if (user) {\n    return (\n      <div>\n        Hi, {user.username}\n        <button onClick={() => dispatch(logout())}>Logout</button>\n      </div>\n    );\n  }\n\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n\n  // const renderPosts = () => {\n  //   if (loading) return <p>Loading posts...</p>;\n  //   if (hasErrors) return <p>Unable to display posts.</p>;\n\n  //   return user.map((user) => <User key={user.id} post={user} excerpt />);\n  // };\n\n  return (\n    // <div>\n    //   <Formik\n    //     initialValues={{ username: \"\", password: \"\" }}\n    //     onSubmit={(values) => {\n    //       dispatch(login(values));\n    //     }}\n    //   >\n    //     {({ isSubmitting }) => (\n    //       <Form>\n    //         <Field\n    //           id=\"outlined-full-width\"\n    //           component={TextField}\n    //           type=\"text\"\n    //           name=\"username\"\n    //         />\n    //         <Field component={TextField} type=\"password\" name=\"password\" />\n    //         <button type=\"submit\" disabled={isSubmitting}>\n    //           Login\n    //         </button>\n    //       </Form>\n    //     )}\n    //   </Formik>\n    // </div>\n\n    <div>\n      <Grid className=\"mt-2\" container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Card className=\"mt-2\">\n            <CardContent>\n              <Typography variant=\"h4\" align=\"center\">\n                Login\n              </Typography>\n\n              <TextField\n                id=\"outlined-full-width\"\n                label=\"Email\"\n                style={{ marginTop: 5, padding: 12 }}\n                placeholder=\"Email Address\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={this.state.LoginData.email}\n                onChange={(e) => {\n                  let { LoginData } = this.state;\n                  LoginData.email = e.target.value;\n                  this.setState({ LoginData });\n                }}\n              />\n\n              <TextField\n                id=\"outlined-full-width\"\n                label=\"Password\"\n                type=\"password\"\n                style={{ marginTop: 5, padding: 12 }}\n                placeholder=\"Password\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                value={this.state.LoginData.password}\n                onChange={(e) => {\n                  let { LoginData } = this.state;\n                  LoginData.password = e.target.value;\n                  this.setState({ LoginData });\n                }}\n              />\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                align=\"center\"\n                onClick={this.login.bind(this)}\n              >\n                submit\n              </Button>\n\n              {/* {error && (\n                  <Alert severity=\"error\" onClick={() => setError(null)}>\n                    {props.error || error}\n                  </Alert>\n                )} */}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      {/* {renderPosts()} */}\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}