{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser,\n  error: \"\",\n  loading: \"\",\n  hasErrors: \"\"\n}; // A slice of user with our reducers\n\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.hasErrors = false;\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    loginFailure: state => {\n      // state.error = action.payload;\n      state.hasErrors = true;\n    },\n    registerSuccess: (state, action) => {\n      state.hasErrors = false;\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n      console.log(\"set\");\n    },\n    registerFailure: (state, action) => {\n      state.error = action.payload;\n      state.hasErrors = true;\n    },\n    logoutSuccess: state => {\n      state.hasErrors = false;\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  loginSuccess,\n  loginFailure,\n  registerSuccess,\n  registerFailure,\n  logoutSuccess\n} = slice.actions; // A selector\n\nexport const userSelector = state => state.user; // The reducer\n\nexport default slice.reducer; // Asynchronous thunk action\n\nexport const login = ({\n  username,\n  password\n}) => async dispatch => {\n  axios.post(\"http://localhost:5000/api/v1/auth/signin\", {\n    email: username,\n    password: password\n  }).then(response => {\n    const {\n      firstname,\n      email,\n      id,\n      token\n    } = response.data.data;\n    const user = {\n      firstname,\n      email,\n      id,\n      token\n    };\n    dispatch(loginSuccess({\n      user\n    }));\n  }).catch(error => {\n    error = error.response.data.error;\n    dispatch(loginFailure({\n      error\n    }));\n  });\n};\nexport const register = ({\n  form_firstname,\n  form_lastname,\n  form_email,\n  form_password,\n  form_gender,\n  form_jobrole,\n  form_department,\n  form_address,\n  form_avatarurl,\n  form_userrole\n}) => async dispatch => {\n  axios.post(\"http://localhost:5000/api/v1/auth/create-user\", {\n    firstname: form_firstname,\n    lastname: form_lastname,\n    email: form_email,\n    password: form_password,\n    gender: form_gender,\n    jobrole: form_jobrole,\n    department: form_department,\n    address: form_address,\n    avatarurl: form_avatarurl,\n    userrole: form_userrole\n  }).then(response => {\n    const {\n      firstname,\n      email,\n      id,\n      token\n    } = response.data.data;\n    const user = {\n      firstname,\n      email,\n      id,\n      token\n    };\n    dispatch(registerSuccess({\n      user\n    }));\n  }).catch(err => {\n    const error = err.response.data.error;\n    dispatch(registerFailure({\n      error\n    }));\n  });\n};\nexport const logout = () => async dispatch => {\n  try {\n    return dispatch(logoutSuccess()); // const res = await axios.post(\"http://localhost:5000/api/v1/auth/logout\");\n  } catch (e) {\n    return console.error(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/user.js"],"names":["createSlice","axios","initialUser","localStorage","getItem","JSON","parse","initialState","user","error","loading","hasErrors","slice","name","reducers","loginSuccess","state","action","payload","setItem","stringify","loginFailure","registerSuccess","console","log","registerFailure","logoutSuccess","removeItem","actions","userSelector","reducer","login","username","password","dispatch","post","email","then","response","firstname","id","token","data","catch","register","form_firstname","form_lastname","form_email","form_password","form_gender","form_jobrole","form_department","form_address","form_avatarurl","form_userrole","lastname","gender","jobrole","department","address","avatarurl","userrole","err","logout","e","message"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\nexport const initialState = {\n  user: initialUser,\n  error: \"\",\n  loading: \"\",\n  hasErrors: \"\",\n};\n\n// A slice of user with our reducers\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.hasErrors = false;\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    loginFailure: (state) => {\n      // state.error = action.payload;\n      state.hasErrors = true;\n    },\n    registerSuccess: (state, action) => {\n      state.hasErrors = false;\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n      console.log(\"set\");\n    },\n    registerFailure: (state, action) => {\n      state.error = action.payload;\n      state.hasErrors = true;\n    },\n    logoutSuccess: (state) => {\n      state.hasErrors = false;\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const {\n  loginSuccess,\n  loginFailure,\n  registerSuccess,\n  registerFailure,\n  logoutSuccess,\n} = slice.actions;\n\n// A selector\nexport const userSelector = (state) => state.user;\n\n// The reducer\nexport default slice.reducer;\n\n// Asynchronous thunk action\nexport const login = ({ username, password }) => async (dispatch) => {\n  axios\n    .post(\"http://localhost:5000/api/v1/auth/signin\", {\n      email: username,\n      password: password,\n    })\n    .then((response) => {\n      const { firstname, email, id, token } = response.data.data;\n      const user = { firstname, email, id, token };\n      dispatch(loginSuccess({ user }));\n    })\n    .catch((error) => {\n      error = error.response.data.error;\n      dispatch(loginFailure({ error }));\n    });\n};\n\nexport const register = ({\n  form_firstname,\n  form_lastname,\n  form_email,\n  form_password,\n  form_gender,\n  form_jobrole,\n  form_department,\n  form_address,\n  form_avatarurl,\n  form_userrole,\n}) => async (dispatch) => {\n  axios\n    .post(\"http://localhost:5000/api/v1/auth/create-user\", {\n      firstname: form_firstname,\n      lastname: form_lastname,\n      email: form_email,\n      password: form_password,\n      gender: form_gender,\n      jobrole: form_jobrole,\n      department: form_department,\n      address: form_address,\n      avatarurl: form_avatarurl,\n      userrole: form_userrole,\n    })\n    .then((response) => {\n      const { firstname, email, id, token } = response.data.data;\n      const user = { firstname, email, id, token };\n      dispatch(registerSuccess({ user }));\n    })\n    .catch((err) => {\n      const error = err.response.data.error;\n      dispatch(registerFailure({ error }));\n    });\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    return dispatch(logoutSuccess());\n    // const res = await axios.post(\"http://localhost:5000/api/v1/auth/logout\");\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}