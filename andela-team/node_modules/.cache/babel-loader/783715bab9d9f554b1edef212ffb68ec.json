{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Feeds/index.js\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { feedsSelector, fetchFeeds } from \"../../slices/feeds\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport Feed from \"../../components/Feed\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ReactPaginate from \"react-paginate\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nconst useStyles = makeStyles(theme => ({\n  media: {\n    height: 140\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: \"#fff\"\n  },\n  bs: {\n    boxShadow: \"2px 2px 7px 1px #ccc\"\n  }\n}));\n\nconst Feeds = props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    feeds,\n    loading\n  } = useSelector(feedsSelector);\n  const [open, setOpen] = React.useState(false);\n  useEffect(() => {\n    dispatch(fetchFeeds());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderFeeds = () => {\n    if (loading) return /*#__PURE__*/React.createElement(Backdrop, {\n      className: classes.backdrop,\n      open: true,\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }));\n    return feeds.map(feed => /*#__PURE__*/React.createElement(Feed, {\n      key: feed.id,\n      feed: feed,\n      excerpt: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    style: {\n      margin: \"100px 50px 30px 0px\"\n    },\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Feeds\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, renderFeeds()))));\n};\n\nexport default Feeds;","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Feeds/index.js"],"names":["React","useEffect","makeStyles","useSelector","useDispatch","feedsSelector","fetchFeeds","Container","Grid","Typography","Feed","Backdrop","Fade","CircularProgress","ReactPaginate","MuiAlert","Snackbar","useStyles","theme","media","height","root","width","maxWidth","backgroundColor","bs","boxShadow","Feeds","props","classes","dispatch","feeds","loading","open","setOpen","useState","handleClose","renderFeeds","backdrop","map","feed","id","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,oBAA1C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH,GADgC;AAIvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAE;AAHb,GAJiC;AASvCC,EAAAA,EAAE,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AATmC,CAAZ,CAAD,CAA5B;;AAcA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,QAAQ,GAAG1B,WAAW,EAA5B;AACA,QAAM;AAAE2B,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqB7B,WAAW,CAACE,aAAD,CAAtC;AACA,QAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkBlC,KAAK,CAACmC,QAAN,CAAe,KAAf,CAAxB;AAEAlC,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,QAAQ,CAACxB,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACwB,QAAD,CAFM,CAAT;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxB,QAAIL,OAAJ,EACE,oBACE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEH,OAAO,CAACS,QADrB;AAEE,MAAA,IAAI,EAAE,IAFR;AAGE,MAAA,OAAO,EAAEF,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASF,WAAOL,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBAAU,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,MAAA,IAAI,EAAED,IAA1B;AAAgC,MAAA,OAAO,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CAAP;AACD,GAZD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAHT;AAIE,IAAA,OAAO,EAAC,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CANF,CADF,eAWE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,OAAO,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,WAAW,EADd,CADF,CAXF,CADF,CADF;AAqBD,CAjDD;;AAmDA,eAAeV,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { feedsSelector, fetchFeeds } from \"../../slices/feeds\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\nimport Feed from \"../../components/Feed\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ReactPaginate from \"react-paginate\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 140,\n  },\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: \"#fff\",\n  },\n  bs: {\n    boxShadow: \"2px 2px 7px 1px #ccc\",\n  },\n}));\n\nconst Feeds = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { feeds, loading } = useSelector(feedsSelector);\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    dispatch(fetchFeeds());\n  }, [dispatch]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const renderFeeds = () => {\n    if (loading)\n      return (\n        <Backdrop\n          className={classes.backdrop}\n          open={true}\n          onClick={handleClose}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      );\n    return feeds.map((feed) => <Feed key={feed.id} feed={feed} excerpt />);\n  };\n\n  return (\n    <div>\n      <Container maxWidth=\"md\">\n        <Grid\n          container\n          spacing={1}\n          style={{ margin: \"100px 50px 30px 0px\" }}\n          justify=\"center\"\n        >\n          <Grid item xs={12} md={9}>\n            <Typography variant=\"h4\">Feeds</Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} justify=\"center\">\n          <Grid item xs={12} md={9}>\n            {renderFeeds()}\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Feeds;\n"]},"metadata":{},"sourceType":"module"}