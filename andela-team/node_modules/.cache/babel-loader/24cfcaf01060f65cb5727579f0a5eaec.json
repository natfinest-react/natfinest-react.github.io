{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser\n}; // A slice of user with our three reducers\n\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    logoutSuccess: (state, action) => {\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  loginSuccess,\n  logoutSuccess\n} = slice.actions; // A selector\n\nexport const userSelector = state => state.user; // The reducer\n\nexport default slice.reducer; // Asynchronous thunk action\n\nexport const login = ({\n  username,\n  password\n}) => async dispatch => {\n  try {\n    const res = await axios.post(\"http://loclhost:5000/api/auth/signin\", {\n      username,\n      password\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.error(error);\n    });\n    dispatchEvent(loginSuccess({\n      username\n    }));\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    const res = await axios.post(\"http://loclhost:5000/api/auth/logout\");\n  } catch (e) {\n    return console.error(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/auth.js"],"names":["createSlice","initialUser","localStorage","getItem","JSON","parse","initialState","user","slice","name","reducers","loginSuccess","state","action","payload","setItem","stringify","logoutSuccess","removeItem","actions","userSelector","reducer","login","username","password","dispatch","res","axios","post","then","response","console","log","error","dispatchEvent","e","message","logout"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADgB,GAEhB,IAFJ;AAGA,OAAO,MAAMG,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAEN;AADoB,CAArB,C,CAIP;;AACA,MAAMO,KAAK,GAAGR,WAAW,CAAC;AACxBS,EAAAA,IAAI,EAAE,MADkB;AAExBH,EAAAA,YAFwB;AAGxBI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;AACAZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeH,MAAM,CAACC,OAAtB,CAA7B;AACD,KAJO;AAKRG,IAAAA,aAAa,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACL,IAAN,GAAa,IAAb;AACAL,MAAAA,YAAY,CAACgB,UAAb,CAAwB,MAAxB;AACD;AARO;AAHc,CAAD,CAAzB,C,CAeA;;AACA,OAAO,MAAM;AAAEP,EAAAA,YAAF;AAAgBM,EAAAA;AAAhB,IAAkCT,KAAK,CAACW,OAA9C,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAIR,KAAD,IAAWA,KAAK,CAACL,IAAtC,C,CAEP;;AACA,eAAeC,KAAK,CAACa,OAArB,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B,MAAOC,QAAP,IAAoB;AACnE,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CACpBC,IADe,CACV,sCADU,EAC8B;AAC5CL,MAAAA,QAD4C;AAE5CC,MAAAA;AAF4C,KAD9B,EAKfK,IALe,CAMbC,QAAD,IAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KARa,EASbG,KAAD,IAAW;AACTF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,KAXa,CAAlB;AAaAC,IAAAA,aAAa,CAACvB,YAAY,CAAC;AAAEY,MAAAA;AAAF,KAAD,CAAb,CAAb;AACD,GAfD,CAeE,OAAOY,CAAP,EAAU;AACV,WAAOJ,OAAO,CAACE,KAAR,CAAcE,CAAC,CAACC,OAAhB,CAAP;AACD;AACF,CAnBM;AAqBP,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AAC9C,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAW,sCAAX,CAAlB;AACD,GAFD,CAEE,OAAOO,CAAP,EAAU;AACV,WAAOJ,OAAO,CAACE,KAAR,CAAcE,CAAC,CAACC,OAAhB,CAAP;AACD;AACF,CANM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\nexport const initialState = {\n  user: initialUser,\n};\n\n// A slice of user with our three reducers\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    logoutSuccess: (state, action) => {\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const { loginSuccess, logoutSuccess } = slice.actions;\n\n// A selector\nexport const userSelector = (state) => state.user;\n\n// The reducer\nexport default slice.reducer;\n\n// Asynchronous thunk action\nexport const login = ({ username, password }) => async (dispatch) => {\n  try {\n    const res = await axios\n      .post(\"http://loclhost:5000/api/auth/signin\", {\n        username,\n        password,\n      })\n      .then(\n        (response) => {\n          console.log(response);\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n    dispatchEvent(loginSuccess({ username }));\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    const res = await axios.post(\"http://loclhost:5000/api/auth/logout\");\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}