{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js\";\nimport React, { useEffect } from \"react\"; // import MuiAlert from \"@material-ui/lab/Alert\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../../slices/user\";\nimport { withFormik } from \"formik\"; // import { TextField } from \"formik-material-ui\";\n\nimport { TextField, Grid, Card, CardContent, Typography, Button } from \"@material-ui/core\"; // import { Field, Form, Formik } from \"formik\";\n\nconst Login = props => {\n  const {\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleReset\n  } = props;\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user);\n\n  if (user) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, \"Hi, \", user.username, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => dispatch(logout()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Logout\"));\n  } // const renderPosts = () => {\n  //   if (loading) return <p>Loading posts...</p>;\n  //   if (hasErrors) return <p>Unable to display posts.</p>;\n  //   return user.map((user) => <User key={user.id} post={user} excerpt />);\n  // };\n\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <Formik\n    //     initialValues={{ username: \"\", password: \"\" }}\n    //     onSubmit={(values) => {\n    //       dispatch(login(values));\n    //     }}\n    //   >\n    //     {({ isSubmitting }) => (\n    //       <Form>\n    //         <Field\n    //           id=\"outlined-full-width\"\n    //           component={TextField}\n    //           type=\"text\"\n    //           name=\"username\"\n    //         />\n    //         <Field component={TextField} type=\"password\" name=\"password\" />\n    //         <button type=\"submit\" disabled={isSubmitting}>\n    //           Login\n    //         </button>\n    //       </Form>\n    //     )}\n    //   </Formik>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"mt-2\",\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Email\",\n      style: {\n        marginTop: 5,\n        padding: 12\n      },\n      placeholder: \"Email Address\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: handleChange,\n      onBlur: handleBlur,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-full-width\",\n      label: \"Password\",\n      type: \"password\",\n      style: {\n        marginTop: 5,\n        padding: 12\n      },\n      placeholder: \"Password\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      align: \"center\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"submit\")))))))\n  );\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Login/index.js"],"names":["React","useEffect","useDispatch","useSelector","login","logout","withFormik","TextField","Grid","Card","CardContent","Typography","Button","Login","props","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","dispatch","user","state","username","marginTop","padding","shrink"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\n// import MuiAlert from \"@material-ui/lab/Alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout } from \"../../slices/user\";\nimport { withFormik } from \"formik\";\n// import { TextField } from \"formik-material-ui\";\nimport {\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\n// import { Field, Form, Formik } from \"formik\";\n\nconst Login = (props) => {\n  const {\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleReset,\n  } = props;\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.user);\n  if (user) {\n    return (\n      <div>\n        Hi, {user.username}\n        <button onClick={() => dispatch(logout())}>Logout</button>\n      </div>\n    );\n  }\n\n  // const renderPosts = () => {\n  //   if (loading) return <p>Loading posts...</p>;\n  //   if (hasErrors) return <p>Unable to display posts.</p>;\n\n  //   return user.map((user) => <User key={user.id} post={user} excerpt />);\n  // };\n\n  return (\n    // <div>\n    //   <Formik\n    //     initialValues={{ username: \"\", password: \"\" }}\n    //     onSubmit={(values) => {\n    //       dispatch(login(values));\n    //     }}\n    //   >\n    //     {({ isSubmitting }) => (\n    //       <Form>\n    //         <Field\n    //           id=\"outlined-full-width\"\n    //           component={TextField}\n    //           type=\"text\"\n    //           name=\"username\"\n    //         />\n    //         <Field component={TextField} type=\"password\" name=\"password\" />\n    //         <button type=\"submit\" disabled={isSubmitting}>\n    //           Login\n    //         </button>\n    //       </Form>\n    //     )}\n    //   </Formik>\n    // </div>\n\n    <div>\n      <Grid className=\"mt-2\" container justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <form onSubmit={handleSubmit}>\n            <Card className=\"mt-2\">\n              <CardContent>\n                <Typography variant=\"h4\" align=\"center\">\n                  Login\n                </Typography>\n\n                <TextField\n                  id=\"outlined-full-width\"\n                  label=\"Email\"\n                  style={{ marginTop: 5, padding: 12 }}\n                  placeholder=\"Email Address\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  variant=\"outlined\"\n                />\n\n                <TextField\n                  id=\"outlined-full-width\"\n                  label=\"Password\"\n                  type=\"password\"\n                  style={{ marginTop: 5, padding: 12 }}\n                  placeholder=\"Password\"\n                  fullWidth\n                  margin=\"normal\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  variant=\"outlined\"\n                />\n\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  align=\"center\"\n                  disabled={isSubmitting}\n                >\n                  submit\n                </Button>\n\n                {/* {error && (\n                  <Alert severity=\"error\" onClick={() => setError(null)}>\n                    {props.error || error}\n                  </Alert>\n                )} */}\n              </CardContent>\n            </Card>\n          </form>\n        </Grid>\n      </Grid>\n      {/* {renderPosts()} */}\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}