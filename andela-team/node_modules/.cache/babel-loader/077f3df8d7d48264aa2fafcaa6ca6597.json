{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser,\n  feeds: \"\"\n}; // A slice of user with our reducers\n\nconst slice = createSlice({\n  name: \"feeds\",\n  initialState,\n  reducers: {\n    getFeedSuccess: (state, action) => {\n      state.user = action.payload;\n    },\n    getFeedsFailure: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  getFeedSuccess,\n  getFeedsFailure\n} = slice.actions; // A selector\n\nexport const feedsSelector = state => state.feeds; // The reducer\n\nexport default slice.reducer; // Asynchronous thunk action\n\nexport const fetchFeeds = () => async dispatch => {\n  axios.post(\"http://localhost:5000/api/v1/feed\", {\n    headers: {\n      Authorization: initialState.user.token\n    }\n  }).then(response => {\n    const feed = response.data.data;\n    console.log(feed);\n    dispatch(getFeedSuccess({\n      feed\n    }));\n  }).catch(error => {\n    const err = error.response.data.error;\n    console.log(err);\n    dispatch(getFeedsFailure({\n      err\n    }));\n  });\n};","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/feeds.js"],"names":["createSlice","axios","initialUser","localStorage","getItem","JSON","parse","initialState","user","feeds","slice","name","reducers","getFeedSuccess","state","action","payload","getFeedsFailure","error","actions","feedsSelector","reducer","fetchFeeds","dispatch","post","headers","Authorization","token","then","response","feed","data","console","log","catch","err"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADgB,GAEhB,IAFJ;AAIA,OAAO,MAAMG,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAEN,WADoB;AAE1BO,EAAAA,KAAK,EAAE;AAFmB,CAArB,C,CAKP;;AACA,MAAMC,KAAK,GAAGV,WAAW,CAAC;AACxBW,EAAAA,IAAI,EAAE,OADkB;AAExBJ,EAAAA,YAFwB;AAGxBK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACC,OAApB;AACD,KAHO;AAIRC,IAAAA,eAAe,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAClCD,MAAAA,KAAK,CAACI,KAAN,GAAcH,MAAM,CAACC,OAArB;AACD;AANO;AAHc,CAAD,CAAzB,C,CAaA;;AACA,OAAO,MAAM;AAAEH,EAAAA,cAAF;AAAkBI,EAAAA;AAAlB,IAAsCP,KAAK,CAACS,OAAlD,C,CAEP;;AACA,OAAO,MAAMC,aAAa,GAAIN,KAAD,IAAWA,KAAK,CAACL,KAAvC,C,CAEP;;AACA,eAAeC,KAAK,CAACW,OAArB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClDtB,EAAAA,KAAK,CACFuB,IADH,CACQ,mCADR,EAC6C;AACzCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEnB,YAAY,CAACC,IAAb,CAAkBmB;AAD1B;AADgC,GAD7C,EAMGC,IANH,CAMSC,QAAD,IAAc;AAClB,UAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,IAAAA,QAAQ,CAACV,cAAc,CAAC;AAAEiB,MAAAA;AAAF,KAAD,CAAf,CAAR;AACD,GAVH,EAWGI,KAXH,CAWUhB,KAAD,IAAW;AAChB,UAAMiB,GAAG,GAAGjB,KAAK,CAACW,QAAN,CAAeE,IAAf,CAAoBb,KAAhC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAZ,IAAAA,QAAQ,CAACN,eAAe,CAAC;AAAEkB,MAAAA;AAAF,KAAD,CAAhB,CAAR;AACD,GAfH;AAgBD,CAjBM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nexport const initialState = {\n  user: initialUser,\n  feeds: \"\",\n};\n\n// A slice of user with our reducers\nconst slice = createSlice({\n  name: \"feeds\",\n  initialState,\n  reducers: {\n    getFeedSuccess: (state, action) => {\n      state.user = action.payload;\n    },\n    getFeedsFailure: (state, action) => {\n      state.error = action.payload;\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const { getFeedSuccess, getFeedsFailure } = slice.actions;\n\n// A selector\nexport const feedsSelector = (state) => state.feeds;\n\n// The reducer\nexport default slice.reducer;\n\n// Asynchronous thunk action\nexport const fetchFeeds = () => async (dispatch) => {\n  axios\n    .post(\"http://localhost:5000/api/v1/feed\", {\n      headers: {\n        Authorization: initialState.user.token,\n      },\n    })\n    .then((response) => {\n      const feed = response.data.data;\n      console.log(feed);\n      dispatch(getFeedSuccess({ feed }));\n    })\n    .catch((error) => {\n      const err = error.response.data.error;\n      console.log(err);\n      dispatch(getFeedsFailure({ err }));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}