{"ast":null,"code":"import _regeneratorRuntime from\"/Users/user/Documents/GitHub/natfinest-react.github.io/andela-team/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/user/Documents/GitHub/natfinest-react.github.io/andela-team/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createSlice}from\"@reduxjs/toolkit\";import url from\"../components/config\";var initialUser=localStorage.getItem(\"user\")?JSON.parse(localStorage.getItem(\"user\")):null;export var initialState={user:initialUser,loading:false,feeds:[]};// A slice of user with our reducers\nvar feedsSlice=createSlice({name:\"feeds\",initialState:initialState,reducers:{getFeeds:function getFeeds(state){state.loading=true;},getFeedSuccess:function getFeedSuccess(state,action){state.feeds=action.payload;state.loading=false;},getFeedsFailure:function getFeedsFailure(state,action){state.error=action.payload;state.loading=false;}}});// Three actions generated from the slice\nvar _feedsSlice$actions=feedsSlice.actions,getFeeds=_feedsSlice$actions.getFeeds,getFeedSuccess=_feedsSlice$actions.getFeedSuccess,getFeedsFailure=_feedsSlice$actions.getFeedsFailure;// A selector\nexport{getFeeds,getFeedSuccess,getFeedsFailure};export var feedsSelector=function feedsSelector(state){return state.feeds;};// The reducer\nexport default feedsSlice.reducer;// Asynchronous thunk action\n// export const fetchFeeds = () => async (dispatch) => {\n//   const token = initialState.user.user.token;\n//   axios\n//     .get(\"http://localhost:5000/api/v1/feed\", {\n//       headers: {\n//         Authorization: \"Bearer \" + token,\n//       },\n//     })\n//     .then((response) => {\n//       // const feed = response.data;\n//       const feed = response.data.data;\n//       console.log(feed);\n//       dispatch(getFeedSuccess({ feed }));\n//     })\n//     .catch((error) => {\n//       const err = error.response.data.error;\n//       dispatch(getFeedsFailure({ err }));\n//     });\n// };\nexport function fetchFeeds(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var bearer_token,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(getFeeds());_context.prev=1;bearer_token=JSON.parse(localStorage.getItem(\"user\")).user.token;_context.next=5;return fetch(\"\".concat(url,\"/api/v1/feed\"),{headers:{authorization:\"Bearer \"+bearer_token}});case 5:response=_context.sent;_context.next=8;return response.json();case 8:data=_context.sent;dispatch(getFeedSuccess(data.data));_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](1);console.log(_context.t0);dispatch(getFeedsFailure());case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,12]]);}));return function(_x){return _ref.apply(this,arguments);};}();}","map":{"version":3,"sources":["/Users/user/Documents/GitHub/natfinest-react.github.io/andela-team/src/slices/feeds.js"],"names":["createSlice","url","initialUser","localStorage","getItem","JSON","parse","initialState","user","loading","feeds","feedsSlice","name","reducers","getFeeds","state","getFeedSuccess","action","payload","getFeedsFailure","error","actions","feedsSelector","reducer","fetchFeeds","dispatch","bearer_token","token","fetch","headers","authorization","response","json","data","console","log"],"mappings":"+WAAA,OAASA,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,GAAP,KAAgB,sBAAhB,CACA,GAAMC,CAAAA,WAAW,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADgB,CAEhB,IAFJ,CAIA,MAAO,IAAMG,CAAAA,YAAY,CAAG,CAC1BC,IAAI,CAAEN,WADoB,CAE1BO,OAAO,CAAE,KAFiB,CAG1BC,KAAK,CAAE,EAHmB,CAArB,CAMP;AACA,GAAMC,CAAAA,UAAU,CAAGX,WAAW,CAAC,CAC7BY,IAAI,CAAE,OADuB,CAE7BL,YAAY,CAAZA,YAF6B,CAG7BM,QAAQ,CAAE,CACRC,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACnBA,KAAK,CAACN,OAAN,CAAgB,IAAhB,CACD,CAHO,CAIRO,cAAc,CAAE,wBAACD,KAAD,CAAQE,MAAR,CAAmB,CACjCF,KAAK,CAACL,KAAN,CAAcO,MAAM,CAACC,OAArB,CACAH,KAAK,CAACN,OAAN,CAAgB,KAAhB,CACD,CAPO,CAQRU,eAAe,CAAE,yBAACJ,KAAD,CAAQE,MAAR,CAAmB,CAClCF,KAAK,CAACK,KAAN,CAAcH,MAAM,CAACC,OAArB,CACAH,KAAK,CAACN,OAAN,CAAgB,KAAhB,CACD,CAXO,CAHmB,CAAD,CAA9B,CAkBA;wBAC6DE,UAAU,CAACU,O,CAAzDP,Q,qBAAAA,Q,CAAUE,c,qBAAAA,c,CAAgBG,e,qBAAAA,e,CAEzC;gDACA,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACP,KAAD,QAAWA,CAAAA,KAAK,CAACL,KAAjB,EAAtB,CAEP;AACA,cAAeC,CAAAA,UAAU,CAACY,OAA1B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,SAASC,CAAAA,UAAT,EAAsB,CAC3B,+FAAO,iBAAOC,QAAP,iJACLA,QAAQ,CAACX,QAAQ,EAAT,CAAR,CADK,gBAGGY,YAHH,CAGkBrB,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCI,IAAzC,CAA8CmB,KAHhE,uBAIoBC,CAAAA,KAAK,WAAI3B,GAAJ,iBAAuB,CACjD4B,OAAO,CAAE,CACPC,aAAa,CAAE,UAAYJ,YADpB,CADwC,CAAvB,CAJzB,QAIGK,QAJH,qCAUgBA,CAAAA,QAAQ,CAACC,IAAT,EAVhB,QAUGC,IAVH,eAWHR,QAAQ,CAACT,cAAc,CAACiB,IAAI,CAACA,IAAN,CAAf,CAAR,CAXG,iFAaHC,OAAO,CAACC,GAAR,cACAV,QAAQ,CAACN,eAAe,EAAhB,CAAR,CAdG,qEAAP,+DAiBD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport url from \"../components/config\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nexport const initialState = {\n  user: initialUser,\n  loading: false,\n  feeds: [],\n};\n\n// A slice of user with our reducers\nconst feedsSlice = createSlice({\n  name: \"feeds\",\n  initialState,\n  reducers: {\n    getFeeds: (state) => {\n      state.loading = true;\n    },\n    getFeedSuccess: (state, action) => {\n      state.feeds = action.payload;\n      state.loading = false;\n    },\n    getFeedsFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const { getFeeds, getFeedSuccess, getFeedsFailure } = feedsSlice.actions;\n\n// A selector\nexport const feedsSelector = (state) => state.feeds;\n\n// The reducer\nexport default feedsSlice.reducer;\n\n// Asynchronous thunk action\n// export const fetchFeeds = () => async (dispatch) => {\n//   const token = initialState.user.user.token;\n//   axios\n//     .get(\"http://localhost:5000/api/v1/feed\", {\n//       headers: {\n//         Authorization: \"Bearer \" + token,\n//       },\n//     })\n//     .then((response) => {\n//       // const feed = response.data;\n//       const feed = response.data.data;\n//       console.log(feed);\n//       dispatch(getFeedSuccess({ feed }));\n//     })\n//     .catch((error) => {\n//       const err = error.response.data.error;\n//       dispatch(getFeedsFailure({ err }));\n//     });\n// };\n\nexport function fetchFeeds() {\n  return async (dispatch) => {\n    dispatch(getFeeds());\n    try {\n      const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n      const response = await fetch(`${url}/api/v1/feed`, {\n        headers: {\n          authorization: \"Bearer \" + bearer_token,\n        },\n      });\n\n      const data = await response.json();\n      dispatch(getFeedSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(getFeedsFailure());\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}