{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Feeds/index.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { feedsSelector, fetchFeeds } from \"../../slices/feeds\";\nimport { Box } from \"@material-ui/core\";\n\nconst Feeds = () => {\n  const dispatch = useDispatch();\n  const {\n    feeds\n  } = useSelector(feedsSelector);\n  useEffect(() => {\n    dispatch(fetchFeeds());\n  }, [dispatch]);\n  console.log(typeof feeds);\n\n  const renderPosts = () => {\n    // if (feeds) return <>{feeds.feeds}</>;\n    const f = feeds.feeds;\n    const map = {\n      f\n    };\n    const result = Object.values(map);\n    return result.map(link => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }\n    }, result));\n  }; // const listItems = result.map((link) => (\n  //   <li key={link.endpoint}>{link.endpoint}</li>\n  // ));\n  // const renderbase = ({ feeds }) => {\n  //   if (feeds) {\n  //     return Object.keys(feeds).map((item, index) => {\n  //       return (\n  //         <option value={feeds[item].code} key={index}>\n  //           {feeds[item].symbol}\n  //         </option>\n  //       );\n  //     });\n  //   }\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Feeds\", renderPosts());\n};\n\nexport default Feeds;","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/containers/Feeds/index.js"],"names":["React","useEffect","useSelector","useDispatch","feedsSelector","fetchFeeds","Box","Feeds","dispatch","feeds","console","log","renderPosts","f","map","result","Object","values","link"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,oBAA1C;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYP,WAAW,CAACE,aAAD,CAA7B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,KAAnB;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACxB;AACA,UAAMC,CAAC,GAAGJ,KAAK,CAACA,KAAhB;AACA,UAAMK,GAAG,GAAG;AAAED,MAAAA;AAAF,KAAZ;AACA,UAAME,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcH,GAAd,CAAf;AACA,WAAOC,MAAM,CAACD,GAAP,CAAYI,IAAD,iBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,MAAJ,CAArB,CAAP;AACD,GAND,CATkB,CAiBlB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEGH,WAAW,EAFd,CADF;AAOD,CAxCD;;AA0CA,eAAeL,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { feedsSelector, fetchFeeds } from \"../../slices/feeds\";\nimport { Box } from \"@material-ui/core\";\n\nconst Feeds = () => {\n  const dispatch = useDispatch();\n  const { feeds } = useSelector(feedsSelector);\n  useEffect(() => {\n    dispatch(fetchFeeds());\n  }, [dispatch]);\n\n  console.log(typeof feeds);\n\n  const renderPosts = () => {\n    // if (feeds) return <>{feeds.feeds}</>;\n    const f = feeds.feeds;\n    const map = { f };\n    const result = Object.values(map);\n    return result.map((link) => <p>{result}</p>);\n  };\n\n  // const listItems = result.map((link) => (\n  //   <li key={link.endpoint}>{link.endpoint}</li>\n  // ));\n\n  // const renderbase = ({ feeds }) => {\n  //   if (feeds) {\n  //     return Object.keys(feeds).map((item, index) => {\n  //       return (\n  //         <option value={feeds[item].code} key={index}>\n  //           {feeds[item].symbol}\n  //         </option>\n  //       );\n  //     });\n  //   }\n  // };\n\n  return (\n    <div>\n      Feeds\n      {renderPosts()}\n      {/* <ul>{listItems}</ul> */}\n    </div>\n  );\n};\n\nexport default Feeds;\n"]},"metadata":{},"sourceType":"module"}