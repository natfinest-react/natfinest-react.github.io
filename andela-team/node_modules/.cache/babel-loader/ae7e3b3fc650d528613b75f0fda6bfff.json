{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport url from \"../components/config\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser,\n  loading: false,\n  hasErrors: false,\n  article: {}\n}; // A slice of user with our reducers\n\nconst articleSlice = createSlice({\n  name: \"article\",\n  initialState,\n  reducers: {\n    getArticle: state => {\n      state.loading = true;\n    },\n    getArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    getArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    postCommentSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    postCommentFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    editArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    editArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    deleteArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    deleteArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  getArticle,\n  getArticleSuccess,\n  getArticleFailure,\n  editArticleSuccess,\n  editArticleFailure,\n  deleteArticleSuccess,\n  deleteArticleFailure,\n  postCommentSuccess,\n  postCommentFailure\n} = articleSlice.actions; // A selector\n\nexport const articleSelector = state => state.article; // The reducer\n\nexport default articleSlice.reducer;\nexport function postComment({\n  form_comment\n}, id) {\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  const content = {\n    description: form_comment\n  };\n  return async dispatch => {\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}/Comment`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + bearer_token\n        },\n        body: JSON.stringify(content)\n      });\n      const data = await response.json();\n      console.log(data);\n      dispatch(postCommentSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(postCommentFailure());\n    }\n  };\n}\nexport function fetchArticle(id) {\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  return async dispatch => {\n    dispatch(getArticle());\n\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}`, {\n        headers: {\n          authorization: \"Bearer \" + bearer_token\n        }\n      });\n      const data = await response.json();\n      dispatch(getArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticleFailure());\n    }\n  };\n}\nexport function deleteArticle(id) {\n  // console.log(JSON.parse(localStorage.getItem(\"user\")));\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  return async dispatch => {\n    dispatch(getArticle());\n\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: \"Bearer \" + bearer_token\n        }\n      });\n      const data = await response.json();\n      dispatch(deleteArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(deleteArticleFailure());\n    }\n  };\n}\nexport function editArticle(id, {\n  form_title,\n  form_desc\n}) {\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  const content = {\n    title: form_title,\n    description: form_desc\n  };\n  return async dispatch => {\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}`, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + bearer_token\n        },\n        body: JSON.stringify(content)\n      });\n      const data = await response.json();\n      dispatch(editArticleSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(editArticleFailure());\n    }\n  };\n}","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/article.js"],"names":["createSlice","url","initialUser","localStorage","getItem","JSON","parse","initialState","user","loading","hasErrors","article","articleSlice","name","reducers","getArticle","state","getArticleSuccess","action","payload","getArticleFailure","error","postCommentSuccess","postCommentFailure","editArticleSuccess","editArticleFailure","deleteArticleSuccess","deleteArticleFailure","actions","articleSelector","reducer","postComment","form_comment","id","bearer_token","token","content","description","dispatch","response","fetch","method","headers","Accept","authorization","body","stringify","data","json","console","log","message","fetchArticle","deleteArticle","editArticle","form_title","form_desc","title"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport url from \"../components/config\";\n\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nexport const initialState = {\n  user: initialUser,\n  loading: false,\n  hasErrors: false,\n  article: {},\n};\n\n// A slice of user with our reducers\nconst articleSlice = createSlice({\n  name: \"article\",\n  initialState,\n  reducers: {\n    getArticle: (state) => {\n      state.loading = true;\n    },\n    getArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    getArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    postCommentSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    postCommentFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    editArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    editArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    deleteArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    deleteArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const {\n  getArticle,\n  getArticleSuccess,\n  getArticleFailure,\n  editArticleSuccess,\n  editArticleFailure,\n  deleteArticleSuccess,\n  deleteArticleFailure,\n  postCommentSuccess,\n  postCommentFailure,\n} = articleSlice.actions;\n\n// A selector\nexport const articleSelector = (state) => state.article;\n\n// The reducer\nexport default articleSlice.reducer;\n\nexport function postComment({ form_comment }, id) {\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  const content = {\n    description: form_comment,\n  };\n  return async (dispatch) => {\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}/Comment`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + bearer_token,\n        },\n        body: JSON.stringify(content),\n      });\n\n      const data = await response.json();\n      console.log(data);\n      dispatch(postCommentSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(postCommentFailure());\n    }\n  };\n}\n\nexport function fetchArticle(id) {\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  return async (dispatch) => {\n    dispatch(getArticle());\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}`, {\n        headers: {\n          authorization: \"Bearer \" + bearer_token,\n        },\n      });\n\n      const data = await response.json();\n      dispatch(getArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticleFailure());\n    }\n  };\n}\n\nexport function deleteArticle(id) {\n  // console.log(JSON.parse(localStorage.getItem(\"user\")));\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  return async (dispatch) => {\n    dispatch(getArticle());\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: \"Bearer \" + bearer_token,\n        },\n      });\n\n      const data = await response.json();\n      dispatch(deleteArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(deleteArticleFailure());\n    }\n  };\n}\n\nexport function editArticle(id, { form_title, form_desc }) {\n  const bearer_token = JSON.parse(localStorage.getItem(\"user\")).user.token;\n  const content = {\n    title: form_title,\n    description: form_desc,\n  };\n  return async (dispatch) => {\n    try {\n      const response = await fetch(`${url}/api/v1/articles/${id}`, {\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n          authorization: \"Bearer \" + bearer_token,\n        },\n        body: JSON.stringify(content),\n      });\n\n      const data = await response.json();\n      dispatch(editArticleSuccess(data.data.message));\n    } catch (error) {\n      console.log(JSON.stringify(content));\n      console.log(error);\n      dispatch(editArticleFailure());\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}