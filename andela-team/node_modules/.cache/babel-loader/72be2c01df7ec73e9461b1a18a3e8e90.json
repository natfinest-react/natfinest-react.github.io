{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser,\n  loading: false,\n  hasErrors: false,\n  article: {}\n}; // A slice of user with our reducers\n\nconst articleSlice = createSlice({\n  name: \"article\",\n  initialState,\n  reducers: {\n    getArticle: state => {\n      state.loading = true;\n    },\n    getArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    getArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  getArticle,\n  getArticleSuccess,\n  getArticleFailure\n} = articleSlice.actions; // A selector\n\nexport const articleSelector = state => state.article; // The reducer\n\nexport default articleSlice.reducer;\nexport function fetchArticle(id) {\n  const bearer_token = initialState.user.user.token;\n  return async dispatch => {\n    dispatch(getArticle());\n\n    try {\n      const response = await fetch(`http://localhost:5000/api/v1/articles/${id}`, {\n        headers: {\n          authorization: \"Bearer \" + bearer_token\n        }\n      });\n      const data = await response.json();\n      console.log(data.data);\n      dispatch(getArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticleFailure());\n    }\n  };\n}","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/article.js"],"names":["createSlice","initialUser","localStorage","getItem","JSON","parse","initialState","user","loading","hasErrors","article","articleSlice","name","reducers","getArticle","state","getArticleSuccess","action","payload","getArticleFailure","error","actions","articleSelector","reducer","fetchArticle","id","bearer_token","token","dispatch","response","fetch","headers","authorization","data","json","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADgB,GAEhB,IAFJ;AAIA,OAAO,MAAMG,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAEN,WADoB;AAE1BO,EAAAA,OAAO,EAAE,KAFiB;AAG1BC,EAAAA,SAAS,EAAE,KAHe;AAI1BC,EAAAA,OAAO,EAAE;AAJiB,CAArB,C,CAOP;;AACA,MAAMC,YAAY,GAAGX,WAAW,CAAC;AAC/BY,EAAAA,IAAI,EAAE,SADyB;AAE/BN,EAAAA,YAF+B;AAG/BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACD,KAHO;AAIRQ,IAAAA,iBAAiB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACpCF,MAAAA,KAAK,CAACL,OAAN,GAAgBO,MAAM,CAACC,OAAvB;AACAH,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACD,KAPO;AAQRW,IAAAA,iBAAiB,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACpCF,MAAAA,KAAK,CAACK,KAAN,GAAcH,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACD;AAXO;AAHqB,CAAD,CAAhC,C,CAkBA;;AACA,OAAO,MAAM;AACXM,EAAAA,UADW;AAEXE,EAAAA,iBAFW;AAGXG,EAAAA;AAHW,IAITR,YAAY,CAACU,OAJV,C,CAMP;;AACA,OAAO,MAAMC,eAAe,GAAIP,KAAD,IAAWA,KAAK,CAACL,OAAzC,C,CAEP;;AACA,eAAeC,YAAY,CAACY,OAA5B;AAEA,OAAO,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AAC/B,QAAMC,YAAY,GAAGpB,YAAY,CAACC,IAAb,CAAkBA,IAAlB,CAAuBoB,KAA5C;AACA,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACd,UAAU,EAAX,CAAR;;AACA,QAAI;AACF,YAAMe,QAAQ,GAAG,MAAMC,KAAK,CACzB,yCAAwCL,EAAG,EADlB,EAE1B;AACEM,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYN;AADpB;AADX,OAF0B,CAA5B;AASA,YAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACA,IAAjB;AACAL,MAAAA,QAAQ,CAACZ,iBAAiB,CAACiB,IAAI,CAACA,IAAN,CAAlB,CAAR;AACD,KAbD,CAaE,OAAOb,KAAP,EAAc;AACde,MAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACAQ,MAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AACD;AACF,GAnBD;AAoBD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\n\nexport const initialState = {\n  user: initialUser,\n  loading: false,\n  hasErrors: false,\n  article: {},\n};\n\n// A slice of user with our reducers\nconst articleSlice = createSlice({\n  name: \"article\",\n  initialState,\n  reducers: {\n    getArticle: (state) => {\n      state.loading = true;\n    },\n    getArticleSuccess: (state, action) => {\n      state.article = action.payload;\n      state.loading = false;\n    },\n    getArticleFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const {\n  getArticle,\n  getArticleSuccess,\n  getArticleFailure,\n} = articleSlice.actions;\n\n// A selector\nexport const articleSelector = (state) => state.article;\n\n// The reducer\nexport default articleSlice.reducer;\n\nexport function fetchArticle(id) {\n  const bearer_token = initialState.user.user.token;\n  return async (dispatch) => {\n    dispatch(getArticle());\n    try {\n      const response = await fetch(\n        `http://localhost:5000/api/v1/articles/${id}`,\n        {\n          headers: {\n            authorization: \"Bearer \" + bearer_token,\n          },\n        }\n      );\n\n      const data = await response.json();\n      console.log(data.data);\n      dispatch(getArticleSuccess(data.data));\n    } catch (error) {\n      console.log(error);\n      dispatch(getArticleFailure());\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}