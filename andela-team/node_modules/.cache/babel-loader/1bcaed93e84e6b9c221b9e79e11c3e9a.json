{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nexport const initialState = {\n  user: initialUser,\n  loading: \"\",\n  hasErrors: \"\"\n}; // A slice of user with our three reducers\n\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    loginFailure: (state, action) => {\n      state.hasErrors = true;\n    },\n    logoutSuccess: (state, action) => {\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    }\n  }\n}); // Three actions generated from the slice\n\nexport const {\n  loginSuccess,\n  loginFailure,\n  logoutSuccess\n} = slice.actions; // A selector\n\nexport const userSelector = state => state.user; // The reducer\n\nexport default slice.reducer; // Asynchronous thunk action\n\nexport const login = ({\n  username,\n  password\n}) => async dispatch => {\n  axios.post(\"http://localhost:5000/api/v1/auth/signin\", {\n    email: username,\n    password: password\n  }).then(response => {\n    data = response.data;\n    dispatch(loginSuccess({\n      data\n    }));\n    console.log(response);\n  }, error => {\n    dispatch(loginFailure());\n    console.error(error);\n  });\n};\nexport const logout = () => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/v1/auth/logout\");\n  } catch (e) {\n    return console.error(e.message);\n  }\n};","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/slices/user.js"],"names":["createSlice","axios","initialUser","localStorage","getItem","JSON","parse","initialState","user","loading","hasErrors","slice","name","reducers","loginSuccess","state","action","payload","setItem","stringify","loginFailure","logoutSuccess","removeItem","actions","userSelector","reducer","login","username","password","dispatch","post","email","then","response","data","console","log","error","logout","res","e","message"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAChBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CADgB,GAEhB,IAFJ;AAGA,OAAO,MAAMG,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAEN,WADoB;AAE1BO,EAAAA,OAAO,EAAE,EAFiB;AAG1BC,EAAAA,SAAS,EAAE;AAHe,CAArB,C,CAMP;;AACA,MAAMC,KAAK,GAAGX,WAAW,CAAC;AACxBY,EAAAA,IAAI,EAAE,MADkB;AAExBL,EAAAA,YAFwB;AAGxBM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACAd,MAAAA,YAAY,CAACe,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACc,SAAL,CAAeH,MAAM,CAACC,OAAtB,CAA7B;AACD,KAJO;AAKRG,IAAAA,YAAY,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACL,SAAN,GAAkB,IAAlB;AACD,KAPO;AAQRW,IAAAA,aAAa,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACP,IAAN,GAAa,IAAb;AACAL,MAAAA,YAAY,CAACmB,UAAb,CAAwB,MAAxB;AACD;AAXO;AAHc,CAAD,CAAzB,C,CAkBA;;AACA,OAAO,MAAM;AAAER,EAAAA,YAAF;AAAgBM,EAAAA,YAAhB;AAA8BC,EAAAA;AAA9B,IAAgDV,KAAK,CAACY,OAA5D,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAIT,KAAD,IAAWA,KAAK,CAACP,IAAtC,C,CAEP;;AACA,eAAeG,KAAK,CAACc,OAArB,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B,MAAOC,QAAP,IAAoB;AACnE5B,EAAAA,KAAK,CACF6B,IADH,CACQ,0CADR,EACoD;AAChDC,IAAAA,KAAK,EAAEJ,QADyC;AAEhDC,IAAAA,QAAQ,EAAEA;AAFsC,GADpD,EAKGI,IALH,CAMKC,QAAD,IAAc;AACZC,IAAAA,IAAI,GAAGD,QAAQ,CAACC,IAAhB;AACAL,IAAAA,QAAQ,CAACf,YAAY,CAAC;AAAEoB,MAAAA;AAAF,KAAD,CAAb,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAVL,EAWKI,KAAD,IAAW;AACTR,IAAAA,QAAQ,CAACT,YAAY,EAAb,CAAR;AACAe,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,GAdL;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAC9C,MAAI;AACF,UAAMU,GAAG,GAAG,MAAMtC,KAAK,CAAC6B,IAAN,CAAW,0CAAX,CAAlB;AACD,GAFD,CAEE,OAAOU,CAAP,EAAU;AACV,WAAOL,OAAO,CAACE,KAAR,CAAcG,CAAC,CAACC,OAAhB,CAAP;AACD;AACF,CANM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialUser = localStorage.getItem(\"user\")\n  ? JSON.parse(localStorage.getItem(\"user\"))\n  : null;\nexport const initialState = {\n  user: initialUser,\n  loading: \"\",\n  hasErrors: \"\",\n};\n\n// A slice of user with our three reducers\nconst slice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n    loginFailure: (state, action) => {\n      state.hasErrors = true;\n    },\n    logoutSuccess: (state, action) => {\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    },\n  },\n});\n\n// Three actions generated from the slice\nexport const { loginSuccess, loginFailure, logoutSuccess } = slice.actions;\n\n// A selector\nexport const userSelector = (state) => state.user;\n\n// The reducer\nexport default slice.reducer;\n\n// Asynchronous thunk action\nexport const login = ({ username, password }) => async (dispatch) => {\n  axios\n    .post(\"http://localhost:5000/api/v1/auth/signin\", {\n      email: username,\n      password: password,\n    })\n    .then(\n      (response) => {\n        data = response.data;\n        dispatch(loginSuccess({ data }));\n        console.log(response);\n      },\n      (error) => {\n        dispatch(loginFailure());\n        console.error(error);\n      }\n    );\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    const res = await axios.post(\"http://localhost:5000/api/v1/auth/logout\");\n  } catch (e) {\n    return console.error(e.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}