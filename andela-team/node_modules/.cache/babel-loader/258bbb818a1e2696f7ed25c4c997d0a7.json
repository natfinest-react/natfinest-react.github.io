{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/components/Private/index.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { userSelector } from \"../../slices/user\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"token\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n\n  try {\n    decode(token);\n    const {\n      exp\n    } = decode(refreshToken);\n\n    if (Date.now() >= exp * 1000) {\n      console.log(\"try\");\n      return false;\n    }\n  } catch (err) {\n    console.log(\"catch\");\n    return false;\n  }\n\n  return true;\n};\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const {\n    user\n  } = useSelector(userSelector);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => user ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/user/Documents/Andela_Teamwork_Frontend/frontend/src/components/Private/index.js"],"names":["React","Redirect","Route","useSelector","userSelector","isAuthenticated","token","localStorage","getItem","refreshToken","decode","exp","Date","now","console","log","err","PrivateRoute","component","Component","rest","user","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,YAAY,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;;AACA,MAAI;AACFE,IAAAA,MAAM,CAACJ,KAAD,CAAN;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAUD,MAAM,CAACD,YAAD,CAAtB;;AACA,QAAIG,IAAI,CAACC,GAAL,MAAcF,GAAG,GAAG,IAAxB,EAA8B;AAC5BG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,aAAO,KAAP;AACD;AACF,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CAfD;;AAiBA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAWlB,WAAW,CAACC,YAAD,CAA5B;AAEA,sBACE,oBAAC,KAAD,oBACMgB,IADN;AAEE,IAAA,MAAM,EAAGE,KAAD,IACND,IAAI,gBACF,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADE,gBAGF,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAjBD;;AAmBA,eAAeT,YAAf","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport { useSelector } from \"react-redux\";\nimport { userSelector } from \"../../slices/user\";\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem(\"token\");\n  const refreshToken = localStorage.getItem(\"refreshToken\");\n  try {\n    decode(token);\n    const { exp } = decode(refreshToken);\n    if (Date.now() >= exp * 1000) {\n      console.log(\"try\");\n      return false;\n    }\n  } catch (err) {\n    console.log(\"catch\");\n    return false;\n  }\n  return true;\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { user } = useSelector(userSelector);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}