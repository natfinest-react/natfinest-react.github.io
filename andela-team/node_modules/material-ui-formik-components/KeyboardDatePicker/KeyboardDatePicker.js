"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _pickers = require("@material-ui/pickers");

var _formik = require("formik");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var FKeyboardDatePicker = function FKeyboardDatePicker(props) {
  var label = props.label,
      field = props.field,
      _props$form = props.form,
      touched = _props$form.touched,
      errors = _props$form.errors,
      setFieldValue = _props$form.setFieldValue,
      other = _objectWithoutProperties(props, ["label", "field", "form"]);

  var errorText = (0, _formik.getIn)(errors, field.name);
  var touchedVal = (0, _formik.getIn)(touched, field.name);
  var hasError = touchedVal && errorText !== undefined;
  return /*#__PURE__*/_react["default"].createElement(_pickers.KeyboardDatePicker, _extends({
    label: label,
    error: hasError,
    helperText: hasError ? errorText : '',
    onChange: function onChange(value) {
      return setFieldValue(field.name, value);
    },
    value: field.value // eslint-disable-next-line react/jsx-props-no-spreading

  }, other));
};

FKeyboardDatePicker.propTypes = {
  label: _propTypes["default"].string.isRequired,
  field: _propTypes["default"].shape({
    name: _propTypes["default"].string,
    value: _propTypes["default"].any
  }).isRequired,
  form: _propTypes["default"].shape({
    dirty: _propTypes["default"].bool,
    errors: _propTypes["default"].object
  }).isRequired,
  fullWidth: _propTypes["default"].bool,
  margin: _propTypes["default"].oneOf(['none', 'dense', 'normal']),
  autoOk: _propTypes["default"].bool
};
FKeyboardDatePicker.defaultProps = {
  fullWidth: true,
  margin: 'normal',
  autoOk: true
};
var _default = FKeyboardDatePicker;
exports["default"] = _default;